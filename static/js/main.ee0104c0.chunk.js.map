{"version":3,"sources":["Components/Alert.js","Components/darkModeColors.jsx","Components/TextForm.jsx","Components/props.jsx","App.js","index.js"],"names":["Alert","props","alert","className","type","role","text","msg","DarkModeColors","Object1","color","fontSize","IconButton","style","TextForm","useState","setText","headings","placeholder","value","onChange","e","a","target","id","rows","onClick","length","toUpperCase","Warning","toLowerCase","navigator","clipboard","writeText","TextSpace","split","join","b","slice","App","text1","setColor","handle","setHandle","setNavbarColor","switchTextColor","setSwitchTextColor","object","setStyle","setAlert","changeDarkModeColor","alertMode","message","setTimeout","changeStyle","document","querySelector","backgroundColor","href","name","title","about","marginRight","marginLeft","marginBottom","forhtml","position","top","right","borderRadius","paddingRight","defaultProps","Props","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ee0104c0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       <div>\r\n       {props.alert === null ? null : \r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{props.alert.text} {props.alert.msg}</strong>\r\n       </div>\r\n       } \r\n       </div>\r\n    )\r\n}\r\n\r\n// We can also use this syntax\r\n//    props.object && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n//    <strong>{props.object.msg}</strong>\r\n//    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n//    </div>\r\n","import React from 'react'\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport { IconButton } from \"@material-ui/core\"\r\n\r\nexport default function DarkModeColors(props) {\r\n        const Object1 = {\r\n        color:props.color,\r\n        fontSize:'30px'\r\n        } \r\n    return (<IconButton > <AccessAlarmIcon style= {Object1}/></IconButton>)\r\n}\r\n","import React , {useState} from 'react';\r\nexport default function TextForm(props) {\r\n    const [text , setText] = useState(\"\");\r\n   \r\n    // To set all letter to Upper case\r\n    const Upper = (e)=>{\r\n        if(text.length>0)\r\n        { setText(text.toUpperCase());\r\n          props.Warning(<p>text converted to upperCase</p> , \"success\" , <h2>Success</h2>);}\r\n         else\r\n         props.Warning(<p>no text to be converted to upperCase</p> , \"danger\" , <h2>Danger</h2>);\r\n         \r\n    }\r\n   //var count = 0;\r\n   // Setting text at the value of the text area and at the input of textArea\r\n    const hello = (e)=>{\r\n    const a = e.target.value;\r\n    setText(a);\r\n    \r\n    // This is to set a Authentication Warning\r\n    //    if(a.length<100)\r\n    //    else\r\n    //  {  alert(\"Please Delete some Words\");\r\n    //     count++;\r\n    //  }\r\n    //  if(count===5)\r\n    //  {\r\n    //      alert(\"you have exceeded 5 Warnings and now the text will be removed\");\r\n    //      setText(\" \");\r\n    //}\r\n    }\r\n   \r\n   const Clear = ()=>{\r\n      if(text.length>0) \r\n      {setText(\"\");\r\n      props.Warning(<p>text hasBeen cleared</p> , \"success\" , <h2>Success</h2>);}\r\n      else\r\n      props.Warning(<p>no text to clear</p> , \"danger\" , <h2>Danger</h2>);\r\n   } \r\n   \r\n   const Lower = (e)=>{\r\n    if(text.length>0)\r\n   { setText(text.toLowerCase());\r\n    props.Warning(<p>text converted to lowerCase</p> , \"success\" , <h2>Success</h2>);}\r\n    else\r\n    props.Warning(<p>no text to be converted to lowerCase</p> , \"danger\" , <h2>Danger</h2>);\r\n   }\r\n\r\n// This is to enable Dark Mode   \r\n//     let handle = 0;\r\n//     const Dark = ()=>{\r\n//     if(handle ===0)\r\n//     {\r\n//         document.querySelector(\"body\").classList.add(\"hello\");\r\n//         document.querySelector(\"h1\").classList.add(\"h1\");\r\n//         document.querySelector(\".heading2\").classList.add(\"h1\");\r\n//         document.querySelector(\"p\").classList.add(\"p\");\r\n//         handle=1;\r\n//     }\r\n//     else\r\n//     {\r\n//         document.querySelector(\"body\").classList.remove(\"hello\");\r\n//         document.querySelector(\"h1\").classList.remove(\"h1\");\r\n//         document.querySelector(\".heading2\").classList.remove(\"h1\");\r\n//         document.querySelector(\"p\").classList.remove(\"p\");\r\n//         handle=0;\r\n//     }\r\n// }\r\n\r\n    // To Copy the text\r\n    const CopyText = ()=>{\r\n        if(text.length>0)\r\n        { navigator.clipboard.writeText(text);\r\n          props.Warning(<p>text hasBeen copied</p> , \"success\" , <h2>Success</h2>);}\r\n         else\r\n         props.Warning(<p>no text to be copy</p> , \"danger\" , <h2>Danger</h2>);\r\n    }\r\n\r\n    // To remove Extra Space\r\n    const RemoveSpace = ()=>{\r\n        if(text.length>0)\r\n        { const TextSpace = text.split(/[ ]+/);\r\n          setText(TextSpace.join(\" \"));\r\n          props.Warning(<p>all extra space hasBeen removed</p> , \"success\" , <h2>Success</h2>);}\r\n        else\r\n        props.Warning(<p>the body is empty no extra Space</p> , \"danger\" , <h2>Danger</h2>);\r\n        \r\n    }\r\n    // To convert the word first letter to Upper Case\r\n    const firstLetterCapitalise = ()=>{\r\n        \r\n        var b = text;\r\n        for( var a = 0 ; a<text.length ;a++ )\r\n       { \r\n         if(a===0) { b = b.slice(0,a) +  b[a].toUpperCase() + b.slice(a+1);}\r\n         if(b[a]===\" \" && b[a+1]!==\" \")\r\n         {  a++;\r\n            b = b.slice(0,a) +  b[a].toUpperCase() + b.slice(a+1);\r\n         }\r\n\r\n       }\r\n       setText(b);\r\n       props.Warning(<p>all first letter hasBeen capitalised</p> , \"success\" , <h2>Success</h2>);\r\n    }\r\n\r\n\r\n    return (\r\n         <div> \r\n        <div className=\"container \" >\r\n        <h1 >{props.headings}</h1>\r\n        <div className=\"mb-3\">\r\n       <textarea placeholder=\"Enter the text \" className=\"form-control\" value={text} onChange={hello} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n        </div> \r\n       \r\n        <button className=\"btn btn-primary\" onClick={Upper}>Convert into UpperCase</button>  \r\n        <button className=\"btn btn-primary mx-2\" onClick={Lower}>Convert Into LowerCase</button>  \r\n        <button className=\"btn btn-primary mx-1 my-2\" onClick={Clear}>Clear the text</button>  \r\n        <button className=\"btn btn-primary mx-1 my-2\" onClick={CopyText}>Copy the text</button>\r\n        <button className=\"btn btn-primary mx-1 my-2\" onClick={RemoveSpace}>Remove Extra Spaces</button>\r\n        <button className=\"btn btn-primary mx-1 my-2\" onClick={firstLetterCapitalise}>First Letter-Capital</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n        <h2 className = \"heading2\"> This is your Text Info </h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters and the limit is {1000-text.length}/1000</p>\r\n        <p>{0.008*text.split(\" \").length} minute is taken to read {text.split(\" \").length} words</p>\r\n        </div>\r\n       <div className=\"container\">\r\n       <h2 className = \"heading2\">Preview Your Text</h2>\r\n       <p >{text.length === 0 ? \"Preview Your Text Here\" : text}</p>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React , {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import About from \"./Components/About.jsx\";\r\nimport Alert from \"./Alert.js\";\r\nimport DarkmodeColor from \"./darkModeColors.jsx\";\r\nimport Form from \"./TextForm.jsx\";\r\nfunction App(props) {\r\n \r\n\r\n // Thsese are all useState to put the state\r\n const [text , setText] = useState(\"Home-DarkMode\");\r\n const [text1 , setColor] = useState(\"primary\");\r\n const [handle , setHandle] = useState(true);\r\n const [color , setNavbarColor ] = useState(\"dark\");\r\n const [switchTextColor , setSwitchTextColor] = useState(\"light\");\r\n const [object , setStyle]  = useState({});\r\n const [alert , setAlert] = useState(null);\r\n const [changeDarkModeColor , setDarkMode] = useState(\"#050A30\");\r\n // This is for givinf \r\n const alertMode = (message , type , text)=>{\r\n setAlert({\r\n   msg:message,\r\n   type:type,\r\n   text:text\r\n })\r\n setTimeout(()=>{setAlert(null)} , 1500);\r\n }\r\n\r\n // Dark mode of Whole body \r\n const changeStyle = ()=>{\r\n  if(handle) \r\n  {\r\n  setText(\"Home-LightMode\");\r\n  setColor(\"dark btn-outline-light\");\r\n  document.querySelector(\"body\").style.backgroundColor =changeDarkModeColor;\r\n  document.querySelector(\"h1\").style.color = \"#fff\";\r\n  setHandle(false);\r\n  setNavbarColor('light');\r\n  setSwitchTextColor(\"dark\");\r\n  setStyle({color:'#fff'});\r\n  alertMode(<p>dark mode enabled</p> , \"success\" , <h2>Success</h2>);\r\n  // document.title = \"Dark Mode Enabled\";\r\n  // To set a flashable message in title bar\r\n  // setInterval(()=>{ document.title =\"Welcome User\"} , 1500);\r\n  // setInterval(()=>{document.title =\"Lets Start\"} , 2500);\r\n  }\r\n else\r\n {\r\n  setText(\"Home-DarkMode\");\r\n  setColor(\"primary\");\r\n  document.querySelector(\"body\").style.backgroundColor = \"white\";\r\n  document.querySelector(\"h1\").style.color = \"black\";\r\n  setHandle(true);\r\n  setNavbarColor(\"dark\");\r\n  setSwitchTextColor(\"light\");\r\n  setStyle({});\r\n  setAlert(null);\r\n  alertMode(<p>bright mode enabled</p> , \"primary\" , <h2>Success</h2>);\r\n  // document.title=\"light mode enabled\";\r\n }             \r\n }\r\n\r\n \r\n//Style Button with a Dark Mode \r\n var object4 = {\r\n   position:'absolute',\r\n   top:'5em',\r\n   right:'-3em',\r\n   borderRadius:'50px',\r\n   paddingRight:'50px'\r\n\r\n }\r\n  const paddingRight ={\r\n  marginRight:'20px',\r\n  marginLeft:'-5px',\r\n  marginBottom:'2px'\r\n  }\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${color} bg-${color}`}>\r\n  <div className=\"container-fluid\" >\r\n    <a className=\"navbar-brand\" href=\"#\">{props.name}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.title}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link \" href=\"/about\" >{props.about}</a>\r\n        </li>\r\n      </ul>\r\n  <div style={paddingRight}>\r\n  <DarkmodeColor color={\"red\"} />\r\n  <DarkmodeColor color={\"purple\"} />\r\n  <DarkmodeColor color={\"teal\"} />\r\n  <DarkmodeColor color={\"#050A30\"} />\r\n  <DarkmodeColor color={\"#E56997\"} />\r\n  <DarkmodeColor color={\"#66D2D6\"} />\r\n  <DarkmodeColor color={\"#FBC740\"} />\r\n  <DarkmodeColor color={\"#BD97CB\"} />\r\n  </div> \r\n  {/* this is a Dark mode Button */}\r\n  <div className={`form-check form-switch text-${switchTextColor}`}>\r\n  <input className=\"form-check-input\" onClick = {changeStyle} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">{text}</label>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  </nav>\r\n<Alert alert = {alert}/>\r\n{/* this is a form */}\r\n<div className=\"container my-3\" style = {object}>\r\n<Form Warning ={alertMode} headings = \"Enter the text to analyze below\" />\r\n</div> \r\n\r\n{/* {This is a About Component which you can Enable } */}\r\n{/* <About style={{position:'relative'}}/> */}\r\n <button className={`btn btn-${text1}`} onClick={changeStyle} style = {object4}>{text}</button></div>\r\n  )\r\n}\r\n\r\nApp.defaultProps = {\r\n  name:\"Utkarsh Singh\",\r\n  title:\"Default Title\",\r\n  about:\"Default About\",\r\n}\r\n\r\nApp.propTypes = {\r\n  title :PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react'\nimport Navbar from \"./Components/props.jsx\";\n// import Navbar1 from './Components/Navbar.jsx';\n// import About from \"./Components/About.jsx\";\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//   } from \"react-router-dom\";\n  \nexport default function Props() {\n\n    return (\n        // <Router>\n        <div>\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <Navbar1 name = \"Utkarsh Singh\" title = \"Title-Utils\" about = \"About-Utils\"/> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n         <Navbar  name = \"Utkarsh Singh\" title = \"Title-Utils\" about = \"About-Utils\" />\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>)\n     {/* </Router> */}\n    \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App.js\";\n// import Props from \"./Components/DefaultProps.jsx\"\n// import DefaultProps from \"./Components/DefaultClass.jsx\";\n\nReactDOM.render(\n  <div>\n  <App/>\n  </div>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}